{"version":3,"sources":["components/GameMap/GameField.png","constants/alertConstants.js","redux/actions/alertAction.js","components/GameMap/GameMap.js","components/TableUI.js","components/timer/timer.jsx","redux/actions/arrowActions.jsx","components/layout/AlertIcon.js","App.js","reportWebVitals.js","redux/reducers/arrowGroupReducers.jsx","redux/reducers/alertReducer.js","redux/reducers/index.jsx","index.js"],"names":["SET_ALERT","REMOVE_ALERT","uuid","require","setAlert","msg","alertType","dispatch","id","v4","type","payload","setTimeout","connect","state","arrowNumber","arrowList","numberOfArrows","arrowsData","arrows","triggerAlert","addingArrow","timeElapsed","className","src","GameFieldImage","alt","useMap","name","shape","coords","href","onClick","hover","console","log","MsToTime","s","ms","secs","mins","columns","label","maxWidth","align","useStyles","makeStyles","root","width","container","maxHeight","TableUI","RlapPot","classes","pot","React","useState","page","rowsPerPage","Paper","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","map","column","TableCell","style","minWidth","TableBody","slice","row","role","tabIndex","arrow","time","theme","flexGrow","childTable","paddingLeft","marginTop","flexDirection","paper","padding","spacing","textAlign","color","palette","text","secondary","saudara","marginRight","flexWrap","addArrow","barrel","barrelNo","currentTime","AddingArrowAction","deleteArrow","startOnce","setstartOnce","intervalFunc","setintervalFunc","RLeft","setRLeft","RRight","setRRight","RTop","setRTop","RBottom","setRBottom","RCenter","setRCenter","BLeft","setBLeft","BRight","setBRight","BTop","setBTop","BBottom","setBBottom","BCenter","setBCenter","arrowCounter","settimeElapsed","toggleTimer","settoggleTimer","useEffect","length","alert","StopAction","clearInterval","Switch","checked","onChange","event","inputProps","Button","variant","disabled","setInterval","marginLeft","Grid","flex","Typography","startIcon","marginBottom","alertList","alertReducer","Alert","severity","position","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","arrowTemplate","arrowReducer","action","newArrow","newObject","newArray","filter","combineReducers","middleware","thunk","store","createStore","rootReducers","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a6fd2fb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/GameField.327b5015.png\";","export const SET_ALERT = 'SET_ALERT'\nexport const REMOVE_ALERT = 'REMOVE_ALERT'\n","import { SET_ALERT, REMOVE_ALERT } from '../../constants/alertConstants'\nvar uuid = require('uuid')\n\nexport const setAlert = (msg = 'Arrow Added', alertType = 'success') => (\n    dispatch,\n) => {\n    const id = uuid.v4()\n\n    dispatch({\n        type: SET_ALERT,\n        payload: { msg, alertType, id },\n    })\n\n    setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), 1500)\n}\n","import React, { Component } from 'react'\nimport GameFieldImage from './GameField.png'\nimport './map.css'\nimport { setAlert } from '../../redux/actions/alertAction'\nimport { connect } from 'react-redux'\n\nconst GameMap = ({ addingArrow, arrowNumber, timeElapsed, triggerAlert }) => {\n    return (\n        <div>\n            <img\n                className=\"GameFieldImage\"\n                src={GameFieldImage}\n                alt=\"error\"\n                useMap=\"#GameField\"\n            />\n            <map name=\"GameField\">\n                <area\n                    // red1\n                    shape=\"circle\"\n                    coords=\"201,316,10\"\n                    alt=\"buttonerror\"\n                    href=\"#\"\n                    onClick={() => {\n                        addingArrow('RLeft', arrowNumber, timeElapsed)\n                        triggerAlert('Arrow Added at Pot Red Left', 'success')\n                    }}\n                    hover=\"true\"\n                />\n                <area\n                    // red 2\n                    shape=\"circle\"\n                    coords=\"403,316,10\"\n                    alt=\"buttonerror\"\n                    href=\"#\"\n                    onClick={() => {\n                        addingArrow('RRight', arrowNumber, timeElapsed)\n\n                        triggerAlert('Arrow Added at Pot Red Right', 'success')\n                    }}\n                    hover=\"true\"\n                />\n                <area\n                    // blue top\n                    shape=\"circle\"\n                    coords=\"285,176,10\"\n                    alt=\"buttonerror\"\n                    href=\"#\"\n                    onClick={() => {\n                        console.log('blue top')\n                        addingArrow('BTop', arrowNumber, timeElapsed)\n\n                        triggerAlert('Arrow Added at Pot Blue Top', 'success')\n                    }}\n                    hover=\"true\"\n                />\n                <area\n                    shape=\"circle\"\n                    coords=\"285,428,10\"\n                    alt=\"buttonerror\"\n                    href=\"#\"\n                    onClick={() => {\n                        addingArrow('BBottom', arrowNumber, timeElapsed)\n                        triggerAlert(\n                            'Arrow Added at Pot Blue Bottom',\n                            'success',\n                        )\n                    }}\n                    hover=\"true\"\n                />\n                <area\n                    shape=\"circle\"\n                    coords=\"285,302,10\"\n                    alt=\"buttonerror\"\n                    href=\"#\"\n                    onClick={() => {\n                        addingArrow('BCenter', arrowNumber, timeElapsed)\n                        triggerAlert(\n                            'Arrow Added at Pot Blue Center',\n                            'success',\n                        )\n                    }}\n                    hover=\"true\"\n                />\n                <area\n                    shape=\"circle\"\n                    coords=\"201, 287, 10\"\n                    alt=\"buttonerror\"\n                    href=\"#\"\n                    onClick={() => {\n                        addingArrow('BLeft', arrowNumber, timeElapsed)\n\n                        triggerAlert('Arrow Added at Pot Blue Left', 'success')\n                    }}\n                    hover=\"true\"\n                    className=\"test\"\n                />\n                <area\n                    shape=\"circle\"\n                    coords=\"403,287,10\"\n                    alt=\"buttonerror\"\n                    href=\"#\"\n                    onClick={() => {\n                        addingArrow('BRight', arrowNumber, timeElapsed)\n\n                        triggerAlert('Arrow Added at Pot Blue Right', 'success')\n                    }}\n                    hover=\"true\"\n                />\n                <area\n                    shape=\"circle\"\n                    coords=\"320,176,10\"\n                    alt=\"buttonerror\"\n                    href=\"#\"\n                    onClick={() => {\n                        addingArrow('RTop', arrowNumber, timeElapsed)\n\n                        triggerAlert('Arrow Added at Pot Red Top', 'success')\n                    }}\n                    hover=\"true\"\n                />\n                <area\n                    shape=\"circle\"\n                    coords=\"320,428,10\"\n                    alt=\"buttonerror\"\n                    href=\"#\"\n                    onClick={() => {\n                        addingArrow('RBottom', arrowNumber, timeElapsed)\n                        triggerAlert('Arrow Added at Pot Red Bottom', 'success')\n                    }}\n                    hover=\"true\"\n                />\n                <area\n                    shape=\"circle\"\n                    coords=\"320,302,10\"\n                    alt=\"buttonerror\"\n                    href=\"#\"\n                    onClick={() => {\n                        addingArrow('RCenter', arrowNumber, timeElapsed)\n                        triggerAlert('Arrow Added at Pot Red Center', 'success')\n                    }}\n                    hover=\"true\"\n                />\n            </map>\n\n            <div>\n                <p className=\"PotsStatus p0\">\n                    {/* {this.props.arrowNumbers[5]} */}\n                    {/* hi */}\n                    <br />\n                </p>\n                {/* <p className=\"PotsStatus p1\">\n                    {this.props.arrowNumbers[0]} <br />\n                </p>\n                <p className=\"PotsStatus p2\">\n                    {this.props.arrowNumbers[2]} <br />\n                </p>\n                <p className=\"PotsStatus p3\">\n                    {this.props.arrowNumbers[4]} <br />\n                </p>\n                <p className=\"PotsStatus p4\">\n                    {this.props.arrowNumbers[3]} <br />\n                </p>\n                <p className=\"PotsStatus p5\">\n                    {this.props.arrowNumbers[7]} <br />\n                </p>\n                <p className=\"PotsStatus p6\">\n                    {this.props.arrowNumbers[9]} <br />\n                </p>\n                <p className=\"PotsStatus p7\">\n                    {this.props.arrowNumbers[8]} <br />\n                </p>\n                <p className=\"PotsStatus p8\">\n                    {this.props.arrowNumbers[6]} <br />\n                </p>\n                <p className=\"PotsStatus p9\">\n                    {this.props.arrowNumbers[1]} <br />\n                </p> */}\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        arrowNumber: state.arrowList.numberOfArrows,\n        arrowsData: state.arrowList.arrows,\n        // currentTime: state.timer.time,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        triggerAlert: (msg = 'Arrow Added', alertType = 'success') => {\n            dispatch(setAlert(msg, alertType))\n        },\n        // deleteArrow: (id) => {\n        //     dispatch(setAlert(id))\n        // },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GameMap)\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableHead from '@material-ui/core/TableHead'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport TableRow from '@material-ui/core/TableRow'\n\nconst MsToTime = (s) => {\n    var ms = s % 1000\n    s = (s - ms) / 1000\n    var secs = s % 60\n    s = (s - secs) / 60\n    var mins = s % 60\n    var hrs = (s - mins) / 60\n\n    return hrs + ':' + mins + ':' + secs + '.' + ms\n}\n\nconst columns = [\n    { id: 'name', label: 'Arrow No', maxWidth: 50, align: 'left' },\n    { id: 'code', label: 'Time', maxWidth: 100, align: 'left' },\n]\n\nconst useStyles = makeStyles({\n    root: {\n        width: '20%',\n    },\n    container: {\n        maxHeight: 200,\n    },\n})\n\nconst TableUI = ({ RlapPot, pot }) => {\n    const classes = useStyles()\n\n    console.log('rlappot: ', RlapPot)\n\n    const [page, setPage] = React.useState(0)\n    const [rowsPerPage, setRowsPerPage] = React.useState(10)\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage)\n    }\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value)\n        setPage(0)\n    }\n\n    return (\n        // <Paper className={classes.root}>\n        <Paper>\n            <TableContainer className={classes.container}>\n                <Table stickyHeader aria-label=\"sticky table\">\n                    <TableHead>\n                        <TableRow>\n                            {columns.map((column) => (\n                                <TableCell\n                                    key={column.id}\n                                    align={column.align}\n                                    style={{ minWidth: column.minWidth }}\n                                >\n                                    {column.label}\n                                </TableCell>\n                            ))}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {RlapPot.slice(\n                            page * rowsPerPage,\n                            page * rowsPerPage + rowsPerPage,\n                        ).map((row) => {\n                            return (\n                                <TableRow\n                                    hover\n                                    role=\"checkbox\"\n                                    tabIndex={-1}\n                                    // key={row.code}\n                                >\n                                    <TableCell>{row.arrow}</TableCell>\n                                    <TableCell>\n                                        {MsToTime(row.time * 1000)}\n                                    </TableCell>\n                                </TableRow>\n                            )\n                        })}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            {/* <TablePagination\n                rowsPerPageOptions={[10, 25, 100]}\n                component=\"div\"\n                count={RlapPot.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n            /> */}\n        </Paper>\n    )\n}\n\nexport default TableUI\n","import React, { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport GameMap from '../GameMap/GameMap'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button'\nimport TableUI from '../TableUI'\nimport Divider from '@material-ui/core/Divider';\nimport Switch from '@material-ui/core/Switch'\nimport 'fontsource-roboto';\nimport Grid from '@material-ui/core/Grid'\nimport AddIcon from '@material-ui/icons/Add';\n\nimport { connect } from \"react-redux\"\nimport { AddingArrowAction, DeletingArrowAction } from \"../../redux/actions/arrowActions\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    childTable: {\n        flexGrow: 1,\n        paddingLeft: '2vw',\n        marginTop: '5vh',\n        flexDirection: \"row\"\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n    saudara: {\n        marginRight: '2px',\n        flexDirection: 'row',\n        flexWrap: 'nowrap'\n    }\n}))\n\n\nconst Timer = ({ arrowNumber, arrowsData, addArrow, deleteArrow }) => {\n\n    const MsToTime = (s) => {\n        var ms = s % 1000\n        s = (s - ms) / 1000\n        var secs = s % 60\n        s = (s - secs) / 60\n        var mins = s % 60\n        var hrs = (s - mins) / 60\n\n        return hrs + ':' + mins + ':' + secs + '.' + ms\n    }\n\n\n    const [startOnce, setstartOnce] = useState(false)\n    const [intervalFunc, setintervalFunc] = useState({})\n    const [RLeft, setRLeft] = useState([])\n    const [RRight, setRRight] = useState([])\n    const [RTop, setRTop] = useState([])\n    const [RBottom, setRBottom] = useState([])\n    const [RCenter, setRCenter] = useState([])\n    const [BLeft, setBLeft] = useState([])\n    const [BRight, setBRight] = useState([])\n    const [BTop, setBTop] = useState([])\n    const [BBottom, setBBottom] = useState([])\n    const [BCenter, setBCenter] = useState([])\n    const [arrowCounter, setarrowCounter] = useState({ arrow: 1 })\n\n    const [timeElapsed, settimeElapsed] = useState({ time: 180 })\n    const [toggleTimer, settoggleTimer] = useState(false)\n\n    useEffect(() => {\n        if (RLeft.length > 1 && RRight.length > 1 && RBottom.length > 1 && RTop.length > 1 && RCenter.length > 1) {\n            alert('Red Team Victory')\n        }\n        if (BLeft.length > 1 && BRight.length > 1 && BBottom.length > 1 && BTop.length > 1 && BCenter.length > 1) {\n            alert('Blue Team Victory')\n        }\n    }, [RLeft, RRight, RBottom, RTop, RCenter, BLeft, BRight, BBottom, BTop, BCenter])\n\n    useEffect(() => {\n        if (timeElapsed.time == 0) {\n            StopAction()\n            settimeElapsed({ time: 0 })\n            if ((RLeft.length + RRight.length + RTop.length + RBottom.length + RCenter.length) > (BLeft.length + BRight.length + BTop.length + BBottom.length + BCenter.length)) {\n                alert('Red Team Wins')\n            } else {\n                alert('Blue Team Wins')\n            }\n        }\n    }, [timeElapsed.time, RLeft, RRight, RBottom, RTop, RCenter, BLeft, BRight, BBottom, BTop, BCenter])\n\n    useEffect(() => {\n        setRLeft(arrowsData.RLeft);\n        setRRight(arrowsData.RRight);\n        setRTop(arrowsData.RTop);\n        setRBottom(arrowsData.RBottom);\n        setRCenter(arrowsData.RCenter);\n        setBLeft(arrowsData.BLeft);\n        setBRight(arrowsData.BRight);\n        setBTop(arrowsData.BTop);\n        setBBottom(arrowsData.BBottom);\n        setBCenter(arrowsData.BCenter);\n        // console.log('arrows data: ', arrowsData);\n    }, [arrowCounter, arrowsData.RLeft, arrowsData.RRight, arrowsData])\n\n\n\n    const makeTime = () => {\n        setstartOnce(true)\n        setintervalFunc(\n            setInterval(() => {\n                settimeElapsed((timeElapsed) => {\n                    return {\n                        time: timeElapsed.time - 1\n                    }\n                })\n            }, 1000),\n        )\n    }\n\n    const StopAction = () => {\n        clearInterval(intervalFunc)\n        console.log('stop')\n    }\n\n    const Restart = () => {\n        clearInterval(intervalFunc)\n        setstartOnce(false)\n        console.log(\"what is the time: \", timeElapsed)\n        toggleTimer == false ? settimeElapsed((timeElapsed) => {\n            return {\n                time: 180\n            }\n        }) : settimeElapsed((timeElapsed) => {\n            return {\n                time: 60\n            }\n        })\n    }\n\n\n\n    const handleToggletimer = (event) => {\n        settoggleTimer(!toggleTimer)\n        timeElapsed.time == 180 ? settimeElapsed((timeElapsed) => {\n            return {\n                time: 60\n            }\n        }) : settimeElapsed((timeElapsed) => {\n            return {\n                time: 180\n            }\n        })\n    }\n\n    const classes = useStyles();\n\n    return (\n        <>\n            <div>\n                <h1>{MsToTime(timeElapsed.time * 1000)}</h1>\n\n                <Switch\n                    checked={toggleTimer}\n                    onChange={handleToggletimer}\n                    color=\"secondary\"\n                    name=\"toggleTimer\"\n                    inputProps={{ 'aria-label': 'secondary checkbox' }}\n                />\n                <Button variant=\"contained\" disabled={startOnce} onClick={makeTime} style={{ marginLeft: \"1vw\" }}>\n                    Start\n                </Button>\n                <Button variant=\"contained\" onClick={Restart} style={{ marginLeft: \"1vw\" }}>\n                    Restart\n                </Button>\n                <Button variant=\"contained\" onClick={StopAction} style={{ marginLeft: \"1vw\" }}>\n                    Stop\n                </Button>\n                {/* <Button variant=\"contained\" onClick={lapAction}>\n                    Lap\n                </Button> */}\n                {/* <Button variant=\"contained\" onClick={() => {\n                    addArrow(1, arrowNumber, timeElapsed.time);\n                }}>\n                    add bar 1\n                </Button>\n                <Button variant=\"contained\" onClick={() => {\n                    addArrow(2, arrowNumber, timeElapsed.time);\n                }}>\n                    add bar 2\n                </Button>\n                <Button variant=\"contained\" onClick={() => {\n                    deleteArrow(1);\n                }}>\n                    del bar 1\n                </Button>\n                <Button variant=\"contained\" onClick={() => {\n                    deleteArrow(2);\n                }}>\n                    del bar 2\n                </Button> */}\n            </div>\n\n\n\n            <div className={classes.root}>\n                <Grid container className={classes.saudara}>\n                    <Grid container style={{ maxWidth: \"40vw\", marginTop: \"5vh\" }}>\n                        <GameMap addingArrow={addArrow} arrowNumber={arrowNumber} timeElapsed={timeElapsed.time} />\n                    </Grid>\n                    <Grid style={{ flex: 1, flexGrow: 1, flexDirection: \"row\" }}>\n                        <Grid container className={classes.saudara}>\n                            <Typography variant=\"h2\" style={{ marginTop: \"1vh\", marginLeft: \"20vw\", color: \"red\" }}>Red : {RLeft.length + RRight.length + RTop.length + RBottom.length + RCenter.length}</Typography>\n                            <Button\n                                variant=\"outlined\"\n                                color=\"secondary\"\n                                startIcon={<AddIcon />}\n                                style={{ marginTop: \"3vh\", marginLeft: \"3vw\", maxHeight: \"5vh\" }}\n                            >\n                                <Typography style={{ color: 'red' }}>\n                                    Violation\n                                </Typography>\n                            </Button>\n                        </Grid>\n                        <Grid container className={classes.saudara} style={{ marginBottom: \"3vh\" }}>\n                            <Grid style={{ maxWidth: \"200px\", marginTop: \"2vh\", marginLeft: \"1vw\" }}>\n                                <TableUI RlapPot={RLeft} />\n                            </Grid>\n                            <Grid style={{ maxWidth: \"200px\", marginTop: \"2vh\", marginLeft: \"1vw\" }}>\n                                <TableUI RlapPot={RRight} />\n                            </Grid>\n                            <Grid style={{ maxWidth: \"200px\", marginTop: \"2vh\", marginLeft: \"1vw\" }}>\n                                <TableUI RlapPot={RTop} />\n                            </Grid>\n                            <Grid style={{ maxWidth: \"200px\", marginTop: \"2vh\", marginLeft: \"1vw\" }}>\n                                <TableUI RlapPot={RBottom} />\n                            </Grid>\n                            <Grid style={{ maxWidth: \"200px\", marginTop: \"2vh\", marginLeft: \"1vw\" }}>\n                                <TableUI RlapPot={RCenter} />\n                            </Grid>\n                        </Grid>\n                        <Grid style={{ maxWidth: \"70vw\", marginLeft: \"1vw\" }}>\n                            <hr />\n                        </Grid>\n                        <Grid container className={classes.saudara}>\n                            <Typography variant=\"h2\" style={{ marginTop: \"1vh\", marginLeft: \"20vw\", color: \"Blue\" }}>\n                                Blue: {BLeft.length + BRight.length + BTop.length + BBottom.length + BCenter.length}</Typography>\n                            <Button\n                                variant=\"outlined\"\n                                color=\"secondary\"\n                                startIcon={<AddIcon />}\n                                style={{ marginTop: \"4vh\", marginLeft: \"3vw\", maxHeight: \"5vh\" }}\n                            >\n                                <Typography style={{ color: 'red' }}>\n                                    Violation\n                                </Typography>\n                            </Button>\n                        </Grid>\n                        <Grid container className={classes.saudara}>\n                            <Grid style={{ maxWidth: \"200px\", marginTop: \"2vh\", marginLeft: \"1vw\" }}>\n                                <TableUI RlapPot={BLeft} />\n                            </Grid>\n                            <Grid style={{ maxWidth: \"200px\", marginTop: \"2vh\", marginLeft: \"1vw\" }}>\n                                <TableUI RlapPot={BRight} />\n                            </Grid>\n                            <Grid style={{ maxWidth: \"200px\", marginTop: \"2vh\", marginLeft: \"1vw\" }}>\n                                <TableUI RlapPot={BTop} />\n                            </Grid>\n                            <Grid style={{ maxWidth: \"200px\", marginTop: \"2vh\", marginLeft: \"1vw\" }}>\n                                <TableUI RlapPot={BBottom} />\n                            </Grid>\n                            <Grid style={{ maxWidth: \"200px\", marginTop: \"2vh\", marginLeft: \"1vw\" }}>\n                                <TableUI RlapPot={BCenter} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n\n            </div>\n        </>\n    )\n}\n\n\nconst mapStateToProps = (state) => {\n    return ({\n        arrowsData: state.arrowList.arrows,\n        arrowNumber: state.arrowList.numberOfArrows,\n    })\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return ({\n        addArrow: (barrel, arrow, time) => { dispatch(AddingArrowAction(barrel, arrow, time)) },\n        deleteArrow: (id) => { dispatch(DeletingArrowAction(id)) }\n    })\n}\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Timer)\n","const ADD_ARROW = \"ADD_ARROW\"\nconst DELETE_ARROW = \"DELETE_ARROW\"\n//dont forget to edit it out\nconst AddingArrowAction = (barrelNo, arrow, currentTime) => {\n    return({\n        type : ADD_ARROW,\n        payload : {\n            barrel : barrelNo,\n            arrow : arrow,\n            time : currentTime\n        }\n    })\n}\n\nconst DeletingArrowAction = (idNo) => {\n    //i feel like I could just remove the end on it\n    return({\n        type: DELETE_ARROW,\n        payload : {\n            barrel : idNo,\n        }\n    })\n}\n\nexport {AddingArrowAction, DeletingArrowAction}","import React from 'react'\nimport { connect } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Alert from '@material-ui/lab/Alert'\n\n// const useStyles = makeStyles((theme) => ({\n//     root: {\n//         width: '100%',\n//         '& > * + *': {\n//             marginTop: theme.spacing(2),\n//         },\n//     },\n// }))\n\nconst AlertIcon = ({ alertList }) => {\n    console.log('alert list: ', alertList)\n    // return 'hi'\n\n    return (\n        alertList != null &&\n        alertList.length > 0 &&\n        alertList.map((alert) => {\n            return <Alert severity={alert.alertType}>{alert.msg}</Alert>\n        })\n    )\n\n    // const classes = useStyles()\n    // return (\n    //     {\n    //         alertList != null &&\n    //         alertList.length > 0 &&\n    //         alertList.map((alert) => (\n    //             <Alert severity={alert.alertType}>{alert.msg}</Alert>\n    //         ))\n    //     }\n    // )\n    // return { []alerts.map((each) => each.msg) }\n    // return { alerts }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        alertList: state.alertReducer.alert,\n    }\n}\n\nexport default connect(mapStateToProps)(AlertIcon)\n","import './App.css'\nimport Timer from './components/timer/timer'\nimport AlertIcon from './components/layout/AlertIcon'\n\nimport React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nconst useStyles = makeStyles({\n    alert: {\n        position: 'absolute',\n        maxWidth: '20vw',\n    },\n})\n\nconst App = () => {\n    const classes = useStyles()\n    return (\n        <div className=\"App\">\n            <div className={classes.alert}>\n                <AlertIcon />\n            </div>\n            <Timer />\n        </div>\n    )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\n    numberOfArrows: 0,\n    arrows: {\n        RLeft: [],\n        RRight: [],\n        RTop: [],\n        RBottom: [],\n        RCenter: [],\n        BLeft: [],\n        BRight: [],\n        BTop: [],\n        BBottom: [],\n        BCenter: [],\n    },\n    alert: [],\n}\n\nconst arrowTemplate = (arrow, currentTime) => {\n    return ({\n        arrow: arrow,\n        time: currentTime\n    })\n}\n\nconst arrowReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"ADD_ARROW\": {\n            //there should be a better way\n            //a 2d array allow the data to be more dynamic, ask him\n            console.log(\"Arrow addition called\")\n            const { arrow, barrel, time } = action.payload;\n            const newArrow = arrowTemplate(arrow + 1, time);\n            let newObject = {};\n            let newArray = [];\n            switch (barrel) {\n                case \"RLeft\":\n                    newArray = [...state.arrows.RLeft, newArrow];\n                    newObject = { ...state.arrows, RLeft: newArray }\n                    break;\n                case \"RRight\":\n                    newArray = [...state.arrows.RRight, newArrow];\n                    newObject = { ...state.arrows, RRight: newArray }\n                    break;\n                case \"RTop\":\n                    newArray = [...state.arrows.RTop, newArrow];\n                    newObject = { ...state.arrows, RTop: newArray }\n                    break;\n                case \"RBottom\":\n                    newArray = [...state.arrows.RBottom, newArrow];\n                    newObject = { ...state.arrows, RBottom: newArray }\n                    break;\n                case \"RCenter\":\n                    newArray = [...state.arrows.RCenter, newArrow];\n                    newObject = { ...state.arrows, RCenter: newArray }\n                    break;\n                case \"BLeft\":\n                    newArray = [...state.arrows.BLeft, newArrow];\n                    newObject = { ...state.arrows, BLeft: newArray }\n                    break;\n                case \"BRight\":\n                    newArray = [...state.arrows.BRight, newArrow];\n                    newObject = { ...state.arrows, BRight: newArray }\n                    break;\n                case \"BTop\":\n                    newArray = [...state.arrows.BTop, newArrow];\n                    newObject = { ...state.arrows, BTop: newArray }\n                    break;\n                case \"BBottom\":\n                    newArray = [...state.arrows.BBottom, newArrow];\n                    newObject = { ...state.arrows, BBottom: newArray }\n                    break;\n                case \"BCenter\":\n                    newArray = [...state.arrows.BCenter, newArrow];\n                    newObject = { ...state.arrows, BCenter: newArray }\n                    break;\n                default:\n                    break;\n            }\n            // console.log({\n            //     numberOfArrows: state.numberOfArrows + 1,\n            //     arrows: newObject\n            // });\n            return ({\n                ...state,\n                numberOfArrows: state.numberOfArrows + 1,\n                arrows: newObject\n            });\n        }\n        // case \"DELETE_ARROW\": {\n        //     //2d array also can play in this part\n        //     const { barrel } = action.payload;\n        //     let newObject = {};\n        //     let newArray = [];\n        //     // console.log(barrel);\n        //     switch (barrel) {\n        //         case 1:\n        //             newArray = state.arrows.RLeft.filter((value, index, array) => index < array.length - 1);\n        //             // console.log(newArray);\n        //             newObject = { ...state.arrows, RLeft: newArray };\n        //             break;\n        //         case 2:\n        //             newArray = state.arrows.one.filter((value, index, array) => index < array.length - 1);\n        //             newObject = { ...state.arrows, two: newArray };\n        //             break;\n        //         default:\n        //             break;\n        //     }\n        //     // console.log({\n        //     //     numberOfArrows: state.numberOfArrows - 1,\n        //     //     arrows: newObject\n        //     // });\n        //     return ({\n        //         numberOfArrows: state.numberOfArrows - 1,\n        //         arrows: newObject\n        //     });\n        // }\n        default: {\n\n            return state;\n        }\n    }\n}\n\nexport default arrowReducer;","import { SET_ALERT, REMOVE_ALERT } from '../../constants/alertConstants'\n\nconst initialState = {\n    numberOfArrows: 0,\n    arrows: {\n        RLeft: [],\n        RRight: [],\n        RTop: [],\n        RBottom: [],\n        RCenter: [],\n        BLeft: [],\n        BRight: [],\n        BTop: [],\n        BBottom: [],\n        BCenter: [],\n    },\n    alert: [],\n}\n\nconst alertReducer = (state = initialState, action) => {\n    const { type, payload } = action\n    switch (type) {\n        case SET_ALERT:\n            return { ...state, alert: [...state.alert, payload] }\n        case REMOVE_ALERT:\n            return {\n                ...state,\n                alert: state.alert.filter((alert) => alert.id !== payload),\n            }\n        default:\n            return state\n    }\n}\n\nexport default alertReducer\n","import { combineReducers } from 'redux'\nimport arrowList from \"./arrowGroupReducers\"\nimport alertReducer from './alertReducer';\n\n\nexport default combineReducers({ arrowList, alertReducer });","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport rootReducers from './redux/reducers/index'\nimport { applyMiddleware } from 'redux'\n\nimport thunk from 'redux-thunk'\n\nimport { composeWithDevTools } from 'redux-devtools-extension'\nconst middleware = [thunk]\n\nconst initialState = {\n    numberOfArrows: 0,\n    arrows: {\n        RLeft: [],\n        RRight: [],\n        RTop: [],\n        RBottom: [],\n        RCenter: [],\n        BLeft: [],\n        BRight: [],\n        BTop: [],\n        BBottom: [],\n        BCenter: [],\n    },\n    alert: [],\n}\n\nconst store = createStore(\n    rootReducers,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware)),\n)\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}